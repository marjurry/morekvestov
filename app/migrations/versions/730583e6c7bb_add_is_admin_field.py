"""Add is_admin field

Revision ID: 730583e6c7bb
Revises: 71a352de3938
Create Date: 2025-05-16 22:44:22.415072

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '730583e6c7bb'
down_revision: Union[str, None] = '71a352de3938'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('Challenge', 'materials')
    op.alter_column('Quest', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.drop_constraint('Quest_user_id_fkey', 'Quest', type_='foreignkey')
    op.create_foreign_key(None, 'Quest', 'User', ['user_id'], ['phone_number'], onupdate='CASCADE')
    op.alter_column('User', 'password_hash',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=300),
               existing_nullable=False)
    op.drop_constraint('quest_challenge_association_quest_id_challenge_id_key', 'quest_challenge_association', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('quest_challenge_association_quest_id_challenge_id_key', 'quest_challenge_association', ['quest_id', 'challenge_id'])
    op.alter_column('User', 'password_hash',
               existing_type=sa.String(length=300),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_constraint(None, 'Quest', type_='foreignkey')
    op.create_foreign_key('Quest_user_id_fkey', 'Quest', 'User', ['user_id'], ['phone_number'], ondelete='CASCADE')
    op.alter_column('Quest', 'user_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.add_column('Challenge', sa.Column('materials', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    # ### end Alembic commands ###
